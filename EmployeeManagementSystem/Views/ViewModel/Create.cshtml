@model EmployeeManagementSystem.Models.ViewModels.EmployeeCreateViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<h3 class="highline">New Employee Add by View Model</h3>
@using (Html.BeginForm("AddOrEdit", "ViewModel", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "SubmitForm" }))
{
    @Html.AntiForgeryToken();
    <div class="row">
        <form class="col s12">
            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(t => t.EmployeeName)
                </div>
                <div class="input-field col s10">
                    @Html.EditorFor(t => t.EmployeeName)
                    @Html.ValidationMessageFor(p => p.EmployeeName, "")
                </div>
            </div>
            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(t => t.Address)
                </div>
                <div class="input-field col s10">
                    @Html.EditorFor(t => t.Address)
                    @Html.ValidationMessageFor(p => p.Address, "")
                </div>
            </div>
            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(t => t.Email)
                </div>
                <div class="input-field col s10">
                    @Html.EditorFor(t => t.Email)
                    @Html.ValidationMessageFor(p => p.Email, "")
                </div>
            </div>
            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(t => t.Contact)
                </div>
                <div class="input-field col s10">
                    @Html.EditorFor(t => t.Contact)
                    @Html.ValidationMessageFor(p => p.Contact, "")
                </div>
            </div>
            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.EmployeeDOB, htmlAttributes: new { @class = "input-field col s6" })
                </div>
                <div class="input-field col s10">
                    @Html.EditorFor(model => model.EmployeeDOB, new { htmlAttributes = new { @class = "datepicker" } })
                    @Html.ValidationMessageFor(model => model.EmployeeDOB)
                </div>
            </div>

            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.ImageUrl)
                </div>
                <img src="~/Images/default.png" height="80" width="75" class="change_edit" />
                <input type="file" name="ImageFile" class="changeImage" required />
                @Html.ValidationMessageFor(model => model.ImageUrl, "")

            </div>

            <div class="row">
                <div class="input-field col s2">
                    <input type="submit" value="Create" class="btn" />
                </div>

            </div>
            <div>
                @Html.ActionLink("Back to List", "Index", "ViewModel", htmlAttributes: new { @class = "btn", @role = "button" })
            </div>
        </form>
    </div>
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
@*<script src="~/Scripts/bootstrap.min.js"></script>*@
<script src="~/Content/js/materialize.min.js"></script>

<script>
    //$(document).ready(function () {
    //    $("#OrderDate").datepicker({
    //        changeMonth: true, changeYear: true,
    //        yearRange: "-35:+1"
    //    });
    //})
    $(document).ready(function () {
        $('.datepicker').datepicker();
    });

    $(function () {
        $('.changeImage').change(function () {
            var input = this;
            if (input.files) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('.change_edit').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }

        })
    })
</script>



